diff --git a/drivers/video/fbdev/msm/mdss_fb.c b/drivers/video/fbdev/msm/mdss_fb.c
index 66c3661f7ed9..e4f98d88c7d9 100644
--- a/drivers/video/fbdev/msm/mdss_fb.c
+++ b/drivers/video/fbdev/msm/mdss_fb.c
@@ -1881,7 +1881,7 @@ static void mdss_panel_validate_debugfs_info(struct msm_fb_data_type *mfd)
 		if (is_panel_split(mfd) && pdata->next)
 			mdss_fb_validate_split(pdata->panel_info.xres,
 					pdata->next->panel_info.xres, mfd);
-		mdss_panelinfo_to_fb_var(panel_info, var);
+		mdss_panelinfo_to_fb_var(mfd);
 		if (mdss_fb_send_panel_event(mfd, MDSS_EVENT_CHECK_PARAMS,
 							panel_info))
 			pr_err("Failed to send panel event CHECK_PARAMS\n");
@@ -2017,7 +2017,7 @@ static int mdss_fb_blank_unblank(struct msm_fb_data_type *mfd)
 		 * programmed in the controller.
 		 * Update this info in the upstream structs.
 		 */
-		mdss_panelinfo_to_fb_var(panel_info, var);
+		mdss_panelinfo_to_fb_var(mfd);
 
 		/* Start the work thread to signal idle time */
 		if (mfd->idle_time)
@@ -2757,7 +2757,7 @@ static int mdss_fb_register(struct msm_fb_data_type *mfd)
 		return ret;
 	}
 
-	mdss_panelinfo_to_fb_var(panel_info, var);
+	mdss_panelinfo_to_fb_var(mfd);
 
 	fix->type = panel_info->is_3d_panel;
 	if (mfd->mdp.fb_stride)
@@ -3461,7 +3461,7 @@ static void mdss_fb_update_resolution(struct msm_fb_data_type *mfd,
 	}
 	var->xres_virtual = var->xres;
 	var->yres_virtual = pinfo->yres * mfd->fb_page;
-	mdss_panelinfo_to_fb_var(pinfo, var);
+	mdss_panelinfo_to_fb_var(mfd);
 }
 
 int mdss_fb_atomic_commit(struct fb_info *info,
@@ -3695,9 +3695,15 @@ static void mdss_fb_var_to_panelinfo(struct fb_var_screeninfo *var,
 		pinfo->mipi.dsi_pclk_rate = pinfo->clk_rate;
 }
 
-void mdss_panelinfo_to_fb_var(struct mdss_panel_info *pinfo,
-						struct fb_var_screeninfo *var)
+void mdss_panelinfo_to_fb_var(struct msm_fb_data_type *mfd)
 {
+	if (!mfd)
+		return -EINVAL;
+
+	struct mdss_panel_info *pinfo = mfd->panel_info;
+	struct fb_info *fbi = mfd->fbi;
+	struct fb_var_screeninfo *var = &fbi->var;
+
 	u32 frame_rate;
 
 	var->xres = mdss_fb_get_panel_xres(pinfo);
@@ -3732,10 +3738,17 @@ void mdss_panelinfo_to_fb_var(struct mdss_panel_info *pinfo,
 	if (pinfo->physical_height)
 		var->height = pinfo->physical_height;
 
-	pr_debug("ScreenInfo: res=%dx%d [%d, %d] [%d, %d]\n",
-		var->xres, var->yres, var->left_margin,
-		var->right_margin, var->upper_margin,
-		var->lower_margin);
+	//Hack to update current fbi->mode according to fbi->var when var is updated from panel info
+	if (fbi->mode) {
+		printk("Updating mdss fb mode from fb var\n");
+		fb_var_to_videomode(fbi->mode, var);
+	}
+
+	printk("ScreenInfo: res=%dx%d [%d, %d] [%d, %d]\n",
+ 		var->xres, var->yres, var->left_margin,
+ 		var->right_margin, var->upper_margin,
+ 		var->lower_margin);
+
 }
 
 /**
diff --git a/drivers/video/fbdev/msm/mdss_fb.h b/drivers/video/fbdev/msm/mdss_fb.h
index 4b39f9edef0c..4a0d13f2f079 100644
--- a/drivers/video/fbdev/msm/mdss_fb.h
+++ b/drivers/video/fbdev/msm/mdss_fb.h
@@ -476,8 +476,7 @@ int mdss_fb_async_position_update(struct fb_info *info,
 
 u32 mdss_fb_get_mode_switch(struct msm_fb_data_type *mfd);
 void mdss_fb_report_panel_dead(struct msm_fb_data_type *mfd);
-void mdss_panelinfo_to_fb_var(struct mdss_panel_info *pinfo,
-						struct fb_var_screeninfo *var);
+void mdss_panelinfo_to_fb_var(struct msm_fb_data_type *mfd);
 void mdss_fb_calc_fps(struct msm_fb_data_type *mfd);
 void mdss_fb_idle_pc(struct msm_fb_data_type *mfd);
 #endif /* MDSS_FB_H */
diff --git a/drivers/video/fbdev/msm/mdss_mdp_overlay.c b/drivers/video/fbdev/msm/mdss_mdp_overlay.c
index b70db4faac09..951c7c7497d5 100644
--- a/drivers/video/fbdev/msm/mdss_mdp_overlay.c
+++ b/drivers/video/fbdev/msm/mdss_mdp_overlay.c
@@ -3846,7 +3846,7 @@ int mdss_mdp_dfps_update_params(struct msm_fb_data_type *mfd,
 	 * data, so any further call to get the screen
 	 * info has the updated timings.
 	 */
-	mdss_panelinfo_to_fb_var(&pdata->panel_info, var);
+	mdss_panelinfo_to_fb_var(mfd);
 
 	MDSS_XLOG(dfps);
 	mutex_unlock(&mdp5_data->dfps_lock);
